import k8s from "@kubernetes/client-node";

import expect, {Severity} from "./expect.js";
import initializeK8sAPIClient from "./initializeK8sAPIClient.js";


let role: Role = Role.UNKNOWN;
let identity = "its_me_a_mario" + Math.random();





function sleep(ms: number) {
    return new Promise((resolve) => {
        setTimeout(resolve, ms);
    });
}

async function main()
{
   const kubeAPIClient = initializeK8sAPIClient();

    while(true)
    {
        //console.log(role)
        switch(role)
        {
            case Role.UNKNOWN:
                role = await determineRole(kubeAPIClient);
                break;
            case Role.NONE:
            case Role.PASSIVE:
                await transitionToActiveIfAppropriate(kubeAPIClient);
                break;
            case Role.ACTIVE:
                await renewActive(kubeAPIClient);
                break;
        }

        await sleep(1);
    }
}

main();

